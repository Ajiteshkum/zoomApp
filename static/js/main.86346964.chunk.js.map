{"version":3,"sources":["Zoom.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["crypto","require","ZoomMtg","setZoomJSLib","preLoadWasm","prepareJssdk","apiKey","meetingNumber","signature","apiSecret","role","Promise","res","rej","timestamp","Date","getTime","msg","Buffer","from","toString","hash","createHmac","update","digest","generateSignature","then","Zoom","useEffect","showZoomDIv","initiateMeeting","document","getElementById","style","display","init","leaveUrl","isSupportAV","success","console","log","join","userName","userEmail","passWord","error","className","App","useState","joinMeeting","setJoinMeeting","src","logo","alt","border","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+FAAA,gDAMMA,EAASC,EAAQ,KAuBvBC,UAAQC,aAFQ,mCACE,OAGlBD,UAAQE,cACRF,UAAQG,eAER,IAAIC,EAAS,yBAETC,EAAgB,YAMhBC,EAAY,IAlChB,SAA2BF,EAAQG,EAAWF,EAAeG,GAC3D,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GAEvB,IAAMC,GAAY,IAAIC,MAAOC,UAAY,IACnCC,EAAMC,EAAOC,KAAKb,EAASC,EAAgBO,EAAYJ,GAAMU,SACjE,UAEIC,EAAOrB,EACVsB,WAAW,SAAUb,GACrBc,OAAON,GACPO,OAAO,UAKVZ,EAJkBM,EAAOC,KAAP,UACbb,EADa,YACHC,EADG,YACcO,EADd,YAC2BJ,EAD3B,YACmCW,IACnDD,SAAS,eAsBfK,CAAkBnB,EARF,uCAQqBC,EAAe,GAAGmB,MAAK,SAACd,GAC3DJ,EAAYI,KAiDCe,IA9CF,WAEXC,qBAAU,WACRC,IACA3B,UAAQC,aAAa,mCAAoC,OACzDD,UAAQE,cACRF,UAAQG,eACRyB,MACC,IAEH,IAAMD,EAAc,WAClBE,SAASC,eAAe,cAAcC,MAAMC,QAAU,SAGlDJ,EAAkB,WACtB5B,UAAQiC,KAAK,CACXC,SA1BS,wBA2BTC,aAAa,EAEbC,QAAS,SAACA,GACRC,QAAQC,IAAIF,GAEZpC,UAAQuC,KAAK,CACXjC,UAAWA,EACXD,cAAeA,EACfmC,SAlCK,SAmCLpC,OAAQA,EACRqC,UAnCM,0BAoCNC,SAnCK,SAoCLN,QAAS,SAACA,GACRC,QAAQC,IAAIF,IAEdO,MAAO,SAACA,GACNN,QAAQC,IAAIK,OAIlBA,MAAO,SAACA,GACNN,QAAQC,IAAIK,OAKlB,OAAO,qBAAKC,UAAU,MAAf,qB,mdC1FM,MAA0B,iC,yBC6B1BC,MAxBf,WACE,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,OACE,qBAAKJ,UAAU,MAAf,SACGG,EACC,cAACtB,EAAA,EAAD,IAEA,yBAAQmB,UAAU,aAAlB,UACE,qBAAKK,IAAKC,EAAMN,UAAU,WAAWO,IAAI,SAIzC,wBACEpB,MAAO,CAAEqB,OAAQ,kBACjBC,QAAS,kBAAML,GAAe,IAFhC,gCCLKM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,SAM1BwB,M","file":"static/js/main.86346964.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Zoom.css\";\nimport { ZoomMtg } from \"@zoomus/websdk\";\nimport { useEffect } from \"react\";\n\nconst crypto = require(\"crypto\"); // crypto comes with Node.js\n\nfunction generateSignature(apiKey, apiSecret, meetingNumber, role) {\n  return new Promise((res, rej) => {\n    // Prevent time sync issue between client signature generation and zoom\n    const timestamp = new Date().getTime() - 30000;\n    const msg = Buffer.from(apiKey + meetingNumber + timestamp + role).toString(\n      \"base64\"\n    );\n    const hash = crypto\n      .createHmac(\"sha256\", apiSecret)\n      .update(msg)\n      .digest(\"base64\");\n    const signature = Buffer.from(\n      `${apiKey}.${meetingNumber}.${timestamp}.${role}.${hash}`\n    ).toString(\"base64\");\n\n    res(signature);\n  });\n}\n\nvar zoomJSLib = \"https://source.zoom.us/1.9.8/lib\";\nvar zoomJSAVLib = \"/av\";\nZoomMtg.setZoomJSLib(zoomJSLib, zoomJSAVLib);\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareJssdk();\n\nvar apiKey = \"4pFfvEVRSCinpT9b_1Ka2w\";\nvar apiSecret = \"8YLab73Vq0NDnZxFAMDbjqoApBGUtsXU5FWe\";\nvar meetingNumber = 89730199786;\nvar leaveUrl = \"http://localhost:3000\"; // our redirect url\nvar userName = \"WebSDK\";\nvar userEmail = \"ajiteshk.1997@gmail.com\";\nvar passWord = \"E63EW5\";\n\nvar signature = \"\";\ngenerateSignature(apiKey, apiSecret, meetingNumber, 0).then((res) => {\n  signature = res;\n}); // need to generate based on meeting id - using - role by default 0 = javascript\n\nconst Zoom = () => {\n  // loading zoom libraries before joining on component did mount\n  useEffect(() => {\n    showZoomDIv();\n    ZoomMtg.setZoomJSLib(\"https://source.zoom.us/1.9.0/lib\", \"/av\");\n    ZoomMtg.preLoadWasm();\n    ZoomMtg.prepareJssdk();\n    initiateMeeting();\n  }, []);\n\n  const showZoomDIv = () => {\n    document.getElementById(\"zmmtg-root\").style.display = \"block\";\n  };\n\n  const initiateMeeting = () => {\n    ZoomMtg.init({\n      leaveUrl: leaveUrl,\n      isSupportAV: true,\n\n      success: (success) => {\n        console.log(success);\n\n        ZoomMtg.join({\n          signature: signature,\n          meetingNumber: meetingNumber,\n          userName: userName,\n          apiKey: apiKey,\n          userEmail: userEmail,\n          passWord: passWord,\n          success: (success) => {\n            console.log(success);\n          },\n          error: (error) => {\n            console.log(error);\n          },\n        });\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  };\n\n  return <div className=\"App\">Zoom</div>;\n};\n\nexport default Zoom;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Zoom from \"./Zoom\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [joinMeeting, setJoinMeeting] = useState(false);\n  return (\n    <div className=\"App\">\n      {joinMeeting ? (\n        <Zoom />\n      ) : (\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {/*<p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p> */}\n          <button\n            style={{ border: \"1px solid #fff\" }}\n            onClick={() => setJoinMeeting(true)}\n          >\n            Join Meeting\n          </button>\n        </header>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}